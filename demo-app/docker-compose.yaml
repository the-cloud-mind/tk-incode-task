services:
  demoApp:
    build:
      context: .
      dockerfile: Dockerfile
    image: demo-app:1.0.0
    container_name: demoApp
    develop:
      watch:
        - path: ./
          action: rebuild
          target: /app
    ports:
      - "8080:8080"
    environment:
      PORT: "8080"
    restart: on-failure
    networks:
      - backend

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring-config/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - backend

  loki:
    image: grafana/loki:latest
    container_name: loki
    volumes:
      - ./monitoring-config/loki.yaml:/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - backend

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - /var/log:/var/log
      - ./monitoring-config/promtail.yaml:/etc/promtail/promtail-config.yaml
    command:
      - -config.file=/etc/promtail/promtail-config.yaml
    networks:
      - backend

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "admin"
    depends_on:
      - prometheus
      - loki
    volumes:
      - ./monitoring-config/grafana.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - grafana-storage:/var/lib/grafana
    networks:
      - backend

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    pid: "host"
    restart: unless-stopped
    ports:
      - "9100:9100"
    networks:
      - backend

networks:
  backend:
    driver: bridge
    name: backend_network

volumes:
  grafana-storage: